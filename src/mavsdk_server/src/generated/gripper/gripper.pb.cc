// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gripper/gripper.proto

#include "gripper/gripper.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace gripper {
PROTOBUF_CONSTEXPR GripperGrabRequest::GripperGrabRequest(
    ::_pbi::ConstantInitialized)
  : instance_(0u){}
struct GripperGrabRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GripperGrabRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GripperGrabRequestDefaultTypeInternal() {}
  union {
    GripperGrabRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GripperGrabRequestDefaultTypeInternal _GripperGrabRequest_default_instance_;
PROTOBUF_CONSTEXPR GripperGrabResponse::GripperGrabResponse(
    ::_pbi::ConstantInitialized)
  : action_result_(nullptr){}
struct GripperGrabResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GripperGrabResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GripperGrabResponseDefaultTypeInternal() {}
  union {
    GripperGrabResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GripperGrabResponseDefaultTypeInternal _GripperGrabResponse_default_instance_;
PROTOBUF_CONSTEXPR GripperReleaseRequest::GripperReleaseRequest(
    ::_pbi::ConstantInitialized)
  : instance_(0u){}
struct GripperReleaseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GripperReleaseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GripperReleaseRequestDefaultTypeInternal() {}
  union {
    GripperReleaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GripperReleaseRequestDefaultTypeInternal _GripperReleaseRequest_default_instance_;
PROTOBUF_CONSTEXPR GripperReleaseResponse::GripperReleaseResponse(
    ::_pbi::ConstantInitialized)
  : action_result_(nullptr){}
struct GripperReleaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GripperReleaseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GripperReleaseResponseDefaultTypeInternal() {}
  union {
    GripperReleaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GripperReleaseResponseDefaultTypeInternal _GripperReleaseResponse_default_instance_;
PROTOBUF_CONSTEXPR GripperResult::GripperResult(
    ::_pbi::ConstantInitialized)
  : result_str_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , result_(0)
{}
struct GripperResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GripperResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GripperResultDefaultTypeInternal() {}
  union {
    GripperResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GripperResultDefaultTypeInternal _GripperResult_default_instance_;
}  // namespace gripper
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_gripper_2fgripper_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_gripper_2fgripper_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_gripper_2fgripper_2eproto = nullptr;

const uint32_t TableStruct_gripper_2fgripper_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperGrabRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperGrabRequest, instance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperGrabResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperGrabResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperReleaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperReleaseRequest, instance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperReleaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperReleaseResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::gripper::GripperResult, result_str_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::gripper::GripperGrabRequest)},
  { 7, -1, -1, sizeof(::mavsdk::rpc::gripper::GripperGrabResponse)},
  { 14, -1, -1, sizeof(::mavsdk::rpc::gripper::GripperReleaseRequest)},
  { 21, -1, -1, sizeof(::mavsdk::rpc::gripper::GripperReleaseResponse)},
  { 28, -1, -1, sizeof(::mavsdk::rpc::gripper::GripperResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::gripper::_GripperGrabRequest_default_instance_._instance,
  &::mavsdk::rpc::gripper::_GripperGrabResponse_default_instance_._instance,
  &::mavsdk::rpc::gripper::_GripperReleaseRequest_default_instance_._instance,
  &::mavsdk::rpc::gripper::_GripperReleaseResponse_default_instance_._instance,
  &::mavsdk::rpc::gripper::_GripperResult_default_instance_._instance,
};

const char descriptor_table_protodef_gripper_2fgripper_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025gripper/gripper.proto\022\022mavsdk.rpc.grip"
  "per\"&\n\022GripperGrabRequest\022\020\n\010instance\030\001 "
  "\001(\r\"O\n\023GripperGrabResponse\0228\n\raction_res"
  "ult\030\001 \001(\0132!.mavsdk.rpc.gripper.GripperRe"
  "sult\")\n\025GripperReleaseRequest\022\020\n\010instanc"
  "e\030\001 \001(\r\"R\n\026GripperReleaseResponse\0228\n\ract"
  "ion_result\030\001 \001(\0132!.mavsdk.rpc.gripper.Gr"
  "ipperResult\"\363\003\n\rGripperResult\0228\n\006result\030"
  "\001 \001(\0162(.mavsdk.rpc.gripper.GripperResult"
  ".Result\022\022\n\nresult_str\030\002 \001(\t\"\223\003\n\006Result\022\022"
  "\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\024"
  "\n\020RESULT_NO_SYSTEM\020\002\022\033\n\027RESULT_CONNECTIO"
  "N_ERROR\020\003\022\017\n\013RESULT_BUSY\020\004\022\031\n\025RESULT_COM"
  "MAND_DENIED\020\005\022.\n*RESULT_COMMAND_DENIED_L"
  "ANDED_STATE_UNKNOWN\020\006\022$\n RESULT_COMMAND_"
  "DENIED_NOT_LANDED\020\007\022\022\n\016RESULT_TIMEOUT\020\010\022"
  "*\n&RESULT_VTOL_TRANSITION_SUPPORT_UNKNOW"
  "N\020\t\022%\n!RESULT_NO_VTOL_TRANSITION_SUPPORT"
  "\020\n\022\032\n\026RESULT_PARAMETER_ERROR\020\013\022\026\n\022RESULT"
  "_UNSUPPORTED\020\014\022\021\n\rRESULT_FAILED\020\r*D\n\rGri"
  "pperAction\022\032\n\026GRIPPER_ACTION_RELEASE\020\000\022\027"
  "\n\023GRIPPER_ACTION_GRAB\020\0012\335\001\n\016GripperServi"
  "ce\022`\n\013GripperGrab\022&.mavsdk.rpc.gripper.G"
  "ripperGrabRequest\032\'.mavsdk.rpc.gripper.G"
  "ripperGrabResponse\"\000\022i\n\016GripperRelease\022)"
  ".mavsdk.rpc.gripper.GripperReleaseReques"
  "t\032*.mavsdk.rpc.gripper.GripperReleaseRes"
  "ponse\"\000B!\n\021io.mavsdk.gripperB\014GripperPro"
  "tob\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_gripper_2fgripper_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_gripper_2fgripper_2eproto = {
    false, false, 1130, descriptor_table_protodef_gripper_2fgripper_2eproto,
    "gripper/gripper.proto",
    &descriptor_table_gripper_2fgripper_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_gripper_2fgripper_2eproto::offsets,
    file_level_metadata_gripper_2fgripper_2eproto, file_level_enum_descriptors_gripper_2fgripper_2eproto,
    file_level_service_descriptors_gripper_2fgripper_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_gripper_2fgripper_2eproto_getter() {
  return &descriptor_table_gripper_2fgripper_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_gripper_2fgripper_2eproto(&descriptor_table_gripper_2fgripper_2eproto);
namespace mavsdk {
namespace rpc {
namespace gripper {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GripperResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gripper_2fgripper_2eproto);
  return file_level_enum_descriptors_gripper_2fgripper_2eproto[0];
}
bool GripperResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr GripperResult_Result GripperResult::RESULT_UNKNOWN;
constexpr GripperResult_Result GripperResult::RESULT_SUCCESS;
constexpr GripperResult_Result GripperResult::RESULT_NO_SYSTEM;
constexpr GripperResult_Result GripperResult::RESULT_CONNECTION_ERROR;
constexpr GripperResult_Result GripperResult::RESULT_BUSY;
constexpr GripperResult_Result GripperResult::RESULT_COMMAND_DENIED;
constexpr GripperResult_Result GripperResult::RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN;
constexpr GripperResult_Result GripperResult::RESULT_COMMAND_DENIED_NOT_LANDED;
constexpr GripperResult_Result GripperResult::RESULT_TIMEOUT;
constexpr GripperResult_Result GripperResult::RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN;
constexpr GripperResult_Result GripperResult::RESULT_NO_VTOL_TRANSITION_SUPPORT;
constexpr GripperResult_Result GripperResult::RESULT_PARAMETER_ERROR;
constexpr GripperResult_Result GripperResult::RESULT_UNSUPPORTED;
constexpr GripperResult_Result GripperResult::RESULT_FAILED;
constexpr GripperResult_Result GripperResult::Result_MIN;
constexpr GripperResult_Result GripperResult::Result_MAX;
constexpr int GripperResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GripperAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gripper_2fgripper_2eproto);
  return file_level_enum_descriptors_gripper_2fgripper_2eproto[1];
}
bool GripperAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class GripperGrabRequest::_Internal {
 public:
};

GripperGrabRequest::GripperGrabRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gripper.GripperGrabRequest)
}
GripperGrabRequest::GripperGrabRequest(const GripperGrabRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_ = from.instance_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gripper.GripperGrabRequest)
}

inline void GripperGrabRequest::SharedCtor() {
instance_ = 0u;
}

GripperGrabRequest::~GripperGrabRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gripper.GripperGrabRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GripperGrabRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GripperGrabRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GripperGrabRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gripper.GripperGrabRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GripperGrabRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          instance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GripperGrabRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gripper.GripperGrabRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gripper.GripperGrabRequest)
  return target;
}

size_t GripperGrabRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gripper.GripperGrabRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GripperGrabRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GripperGrabRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GripperGrabRequest::GetClassData() const { return &_class_data_; }

void GripperGrabRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GripperGrabRequest *>(to)->MergeFrom(
      static_cast<const GripperGrabRequest &>(from));
}


void GripperGrabRequest::MergeFrom(const GripperGrabRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gripper.GripperGrabRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _internal_set_instance(from._internal_instance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GripperGrabRequest::CopyFrom(const GripperGrabRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gripper.GripperGrabRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GripperGrabRequest::IsInitialized() const {
  return true;
}

void GripperGrabRequest::InternalSwap(GripperGrabRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(instance_, other->instance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GripperGrabRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gripper_2fgripper_2eproto_getter, &descriptor_table_gripper_2fgripper_2eproto_once,
      file_level_metadata_gripper_2fgripper_2eproto[0]);
}

// ===================================================================

class GripperGrabResponse::_Internal {
 public:
  static const ::mavsdk::rpc::gripper::GripperResult& action_result(const GripperGrabResponse* msg);
};

const ::mavsdk::rpc::gripper::GripperResult&
GripperGrabResponse::_Internal::action_result(const GripperGrabResponse* msg) {
  return *msg->action_result_;
}
GripperGrabResponse::GripperGrabResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gripper.GripperGrabResponse)
}
GripperGrabResponse::GripperGrabResponse(const GripperGrabResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_action_result()) {
    action_result_ = new ::mavsdk::rpc::gripper::GripperResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gripper.GripperGrabResponse)
}

inline void GripperGrabResponse::SharedCtor() {
action_result_ = nullptr;
}

GripperGrabResponse::~GripperGrabResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gripper.GripperGrabResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GripperGrabResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete action_result_;
}

void GripperGrabResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GripperGrabResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gripper.GripperGrabResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GripperGrabResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.gripper.GripperResult action_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GripperGrabResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gripper.GripperGrabResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.gripper.GripperResult action_result = 1;
  if (this->_internal_has_action_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::action_result(this),
        _Internal::action_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gripper.GripperGrabResponse)
  return target;
}

size_t GripperGrabResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gripper.GripperGrabResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.gripper.GripperResult action_result = 1;
  if (this->_internal_has_action_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GripperGrabResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GripperGrabResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GripperGrabResponse::GetClassData() const { return &_class_data_; }

void GripperGrabResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GripperGrabResponse *>(to)->MergeFrom(
      static_cast<const GripperGrabResponse &>(from));
}


void GripperGrabResponse::MergeFrom(const GripperGrabResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gripper.GripperGrabResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_action_result()) {
    _internal_mutable_action_result()->::mavsdk::rpc::gripper::GripperResult::MergeFrom(from._internal_action_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GripperGrabResponse::CopyFrom(const GripperGrabResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gripper.GripperGrabResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GripperGrabResponse::IsInitialized() const {
  return true;
}

void GripperGrabResponse::InternalSwap(GripperGrabResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GripperGrabResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gripper_2fgripper_2eproto_getter, &descriptor_table_gripper_2fgripper_2eproto_once,
      file_level_metadata_gripper_2fgripper_2eproto[1]);
}

// ===================================================================

class GripperReleaseRequest::_Internal {
 public:
};

GripperReleaseRequest::GripperReleaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gripper.GripperReleaseRequest)
}
GripperReleaseRequest::GripperReleaseRequest(const GripperReleaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_ = from.instance_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gripper.GripperReleaseRequest)
}

inline void GripperReleaseRequest::SharedCtor() {
instance_ = 0u;
}

GripperReleaseRequest::~GripperReleaseRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gripper.GripperReleaseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GripperReleaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GripperReleaseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GripperReleaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gripper.GripperReleaseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GripperReleaseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          instance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GripperReleaseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gripper.GripperReleaseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gripper.GripperReleaseRequest)
  return target;
}

size_t GripperReleaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gripper.GripperReleaseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GripperReleaseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GripperReleaseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GripperReleaseRequest::GetClassData() const { return &_class_data_; }

void GripperReleaseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GripperReleaseRequest *>(to)->MergeFrom(
      static_cast<const GripperReleaseRequest &>(from));
}


void GripperReleaseRequest::MergeFrom(const GripperReleaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gripper.GripperReleaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _internal_set_instance(from._internal_instance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GripperReleaseRequest::CopyFrom(const GripperReleaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gripper.GripperReleaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GripperReleaseRequest::IsInitialized() const {
  return true;
}

void GripperReleaseRequest::InternalSwap(GripperReleaseRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(instance_, other->instance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GripperReleaseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gripper_2fgripper_2eproto_getter, &descriptor_table_gripper_2fgripper_2eproto_once,
      file_level_metadata_gripper_2fgripper_2eproto[2]);
}

// ===================================================================

class GripperReleaseResponse::_Internal {
 public:
  static const ::mavsdk::rpc::gripper::GripperResult& action_result(const GripperReleaseResponse* msg);
};

const ::mavsdk::rpc::gripper::GripperResult&
GripperReleaseResponse::_Internal::action_result(const GripperReleaseResponse* msg) {
  return *msg->action_result_;
}
GripperReleaseResponse::GripperReleaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gripper.GripperReleaseResponse)
}
GripperReleaseResponse::GripperReleaseResponse(const GripperReleaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_action_result()) {
    action_result_ = new ::mavsdk::rpc::gripper::GripperResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gripper.GripperReleaseResponse)
}

inline void GripperReleaseResponse::SharedCtor() {
action_result_ = nullptr;
}

GripperReleaseResponse::~GripperReleaseResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gripper.GripperReleaseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GripperReleaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete action_result_;
}

void GripperReleaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GripperReleaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gripper.GripperReleaseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GripperReleaseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.gripper.GripperResult action_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GripperReleaseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gripper.GripperReleaseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.gripper.GripperResult action_result = 1;
  if (this->_internal_has_action_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::action_result(this),
        _Internal::action_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gripper.GripperReleaseResponse)
  return target;
}

size_t GripperReleaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gripper.GripperReleaseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.gripper.GripperResult action_result = 1;
  if (this->_internal_has_action_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GripperReleaseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GripperReleaseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GripperReleaseResponse::GetClassData() const { return &_class_data_; }

void GripperReleaseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GripperReleaseResponse *>(to)->MergeFrom(
      static_cast<const GripperReleaseResponse &>(from));
}


void GripperReleaseResponse::MergeFrom(const GripperReleaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gripper.GripperReleaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_action_result()) {
    _internal_mutable_action_result()->::mavsdk::rpc::gripper::GripperResult::MergeFrom(from._internal_action_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GripperReleaseResponse::CopyFrom(const GripperReleaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gripper.GripperReleaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GripperReleaseResponse::IsInitialized() const {
  return true;
}

void GripperReleaseResponse::InternalSwap(GripperReleaseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GripperReleaseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gripper_2fgripper_2eproto_getter, &descriptor_table_gripper_2fgripper_2eproto_once,
      file_level_metadata_gripper_2fgripper_2eproto[3]);
}

// ===================================================================

class GripperResult::_Internal {
 public:
};

GripperResult::GripperResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.gripper.GripperResult)
}
GripperResult::GripperResult(const GripperResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    result_str_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_str().empty()) {
    result_str_.Set(from._internal_result_str(), 
      GetArenaForAllocation());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.gripper.GripperResult)
}

inline void GripperResult::SharedCtor() {
result_str_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  result_str_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
result_ = 0;
}

GripperResult::~GripperResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.gripper.GripperResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GripperResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_str_.Destroy();
}

void GripperResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GripperResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.gripper.GripperResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GripperResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.gripper.GripperResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::gripper::GripperResult_Result>(val));
        } else
          goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.gripper.GripperResult.result_str"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GripperResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.gripper.GripperResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.gripper.GripperResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.gripper.GripperResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.gripper.GripperResult)
  return target;
}

size_t GripperResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.gripper.GripperResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.gripper.GripperResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GripperResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GripperResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GripperResult::GetClassData() const { return &_class_data_; }

void GripperResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GripperResult *>(to)->MergeFrom(
      static_cast<const GripperResult &>(from));
}


void GripperResult::MergeFrom(const GripperResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.gripper.GripperResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GripperResult::CopyFrom(const GripperResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.gripper.GripperResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GripperResult::IsInitialized() const {
  return true;
}

void GripperResult::InternalSwap(GripperResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &result_str_, lhs_arena,
      &other->result_str_, rhs_arena
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GripperResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gripper_2fgripper_2eproto_getter, &descriptor_table_gripper_2fgripper_2eproto_once,
      file_level_metadata_gripper_2fgripper_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace gripper
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::gripper::GripperGrabRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::gripper::GripperGrabRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::gripper::GripperGrabRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::gripper::GripperGrabResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::gripper::GripperGrabResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::gripper::GripperGrabResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::gripper::GripperReleaseRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::gripper::GripperReleaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::gripper::GripperReleaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::gripper::GripperReleaseResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::gripper::GripperReleaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::gripper::GripperReleaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::gripper::GripperResult*
Arena::CreateMaybeMessage< ::mavsdk::rpc::gripper::GripperResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::gripper::GripperResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
